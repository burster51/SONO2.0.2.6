Original code documentation here:

https://bitcointalk.org/index.php?topic=1080289.0

WINDOWS BUILD NOTES
===================

Build instructions cross compile on linux for windows QT wallet

become root on linux

mkdir /mnt; cd /mnt; git clone https://github.com/mxe/mxe.git
cd mxe
make MXE_TARGETS="i686-w64-mingw32.static" MXE_PLUGIN_DIRS='plugins/examples/openssl1.0 plugins/gcc7 plugins/examples/qt5-freeze' qtbase_VERSION_ID=qt5.7 qtbase_CONFIGURE_OPTS='-no-sql-mysql' boost qttools

this will terminate with an error, then do the following and repeat the make command above

cd /mnt/mxe/usr/i686-w64-mingw32.static; ln -s qt5.7 qt5
cd /mnt/mxe
make MXE_TARGETS="i686-w64-mingw32.static" MXE_PLUGIN_DIRS='plugins/examples/openssl1.0 plugins/gcc7 plugins/examples/qt5-freeze' qtbase_VERSION_ID=qt5.7 qtbase_CONFIGURE_OPTS='-no-sql-mysql' boost qttools

this can take a few hours

download db4.8 or db5.3 libraries and miniupnpc; the 3 scripts compile-db.sh compile-m.sh compile-sono.sh are below

cd /mnt
wget http://download.oracle.com/berkeley-db/db-4.8.30.tar.gz
(or wget http://download.oracle.com/berkeley-db/db-5.3.28.tar.gz)
wget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz
tar xfz db-4.8.30.tar.gz
tar xfz miniupnpc-1.6.tar.gz
cd /mnt/db-4.8.30
./compile-db.sh
cd /mnt/miniupnpc-1.6.20120509/
./compile-m.sh
cd /mnt
git clone https://github.com/burster51/sono-wallet.git
cd sono-wallet
export PATH=/mnt/mxe/usr/bin:$PATH
./compile-sono.sh

------------------------ compile-db.sh -------------------------------------
#!/bin/bash
MXE_PATH=/mnt/mxe
sed -i "s/WinIoCtl.h/winioctl.h/g" src/dbinc/win_db.h
mkdir build_mxe
cd build_mxe

CC=$MXE_PATH/usr/bin/i686-w64-mingw32.static-gcc \
CXX=$MXE_PATH/usr/bin/i686-w64-mingw32.static-g++ \
../dist/configure \
        --disable-replication \
        --enable-mingw \
        --enable-cxx \
        --host x86 \
        --prefix=$MXE_PATH/usr/i686-w64-mingw32.static

make

make install
------------------------ compile-db.sh -------------------------------------

------------------------ compile-m.sh -------------------------------------
#!/bin/bash
MXE_PATH=/mnt/mxe

CC=$MXE_PATH/usr/bin/i686-w64-mingw32.static-gcc \
AR=$MXE_PATH/usr/bin/i686-w64-mingw32.static-ar \
CFLAGS="-DSTATICLIB -I$MXE_PATH/usr/i686-w64-mingw32.static/include" \
LDFLAGS="-L$MXE_PATH/usr/i686-w64-mingw32.static/lib" \
make libminiupnpc.a

mkdir $MXE_PATH/usr/i686-w64-mingw32.static/include/miniupnpc
cp *.h $MXE_PATH/usr/i686-w64-mingw32.static/include/miniupnpc
cp libminiupnpc.a $MXE_PATH/usr/i686-w64-mingw32.static/lib
------------------------ compile-m.sh -------------------------------------

------------------------ compile-sono.sh -------------------------------------
#!/bin/bash
MXE_INCLUDE_PATH=/mnt/mxe/usr/i686-w64-mingw32.static/include
MXE_LIB_PATH=/mnt/mxe/usr/i686-w64-mingw32.static/lib

i686-w64-mingw32.static-qmake-qt5.7 \
        BOOST_LIB_SUFFIX=-mt \
        BOOST_THREAD_LIB_SUFFIX=_win32-mt \
        BOOST_INCLUDE_PATH=$MXE_INCLUDE_PATH/boost \
        BOOST_LIB_PATH=$MXE_LIB_PATH \
        OPENSSL_INCLUDE_PATH=$MXE_INCLUDE_PATH/openssl \
        OPENSSL_LIB_PATH=$MXE_LIB_PATH \
        BDB_INCLUDE_PATH=$MXE_INCLUDE_PATH \
        BDB_LIB_PATH=$MXE_LIB_PATH \
        MINIUPNPC_INCLUDE_PATH=$MXE_INCLUDE_PATH \
        MINIUPNPC_LIB_PATH=$MXE_LIB_PATH \
        QMAKE_LRELEASE=/mnt/mxe/usr/i686-w64-mingw32.static/qt5.7/bin/lrelease sono-qt.pro

make -f Makefile.Release
------------------------ compile-sono.sh -------------------------------------
